/* Circles */

$circles: 7;
$circleDiameter: 120px;
$topOffset: $circleDiameter / 4 * -1;
$spaceBetween: $circleDiameter / 2;
$portholeBigger: 20px;
$portholeBorder: 10px;

@-webkit-keyframes clouds {
    from {
        background-position:
            0% 0%,
            50% 0%;
    }
    to {
        background-position:
            512px 0%,
            50% 0%;
    }
}

@-webkit-keyframes bgcolorstrobe {
    0% {
        background-color: hsl(0, 50%, 50%);
    }
    20% {
        background-color: hsl(70, 50%, 50%);
    }
    40% {
        background-color: hsl(140, 50%, 50%);
    }
    60% {
        background-color: hsl(210, 50%, 50%);
    }
    80% {
        background-color: hsl(280, 50%, 50%);
    }
    100% {
        background-color: hsl(360, 50%, 50%);
    }
}

#circles {
    @include background(
        url( /images/clouds.png ),
        linear-gradient(
            hsla(0, 0%, 0%, 0),
            hsl(10, 100%, 0%)
        )
    );
    background: {
        attachment: fixed;
        color: hsl(10, 50%, 50%);
        origin: padding-box;
        position: 50% 0%;
        repeat: repeat;
    }
    height: ( $circles * $circleDiameter ) + ( $circles * $spaceBetween ) - $spaceBetween;
    left: -$circleDiameter * 1.5;
    position: absolute;
    top: 40px;
    width: $circleDiameter;

    -webkit-animation:
        clouds 20s infinite linear;
}

#circles:after {
    /*
    @include background(
        radial-gradient(
            ( $circleDiameter / 2 ) ( $circleDiameter / 2 ),
            hsla(0, 0%, 0%, 0) $circleDiameter / 2,
            hsl(0, 0%, 100%) $circleDiameter / 2
        )
    );
    */
    background-position: 0 0;
    background-repeat: repeat;
    background-size: $circleDiameter * 1.5 $circleDiameter * 1.5;
    content: '';
    display: block;
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
}

#circles b {
    background: {
        color: hsla(0, 0%, 0%, 0);
    }
    border: $portholeBorder solid hsl(0, 50%, 100%);
    @include border-radius( ( $circleDiameter / 2 ) + ( $portholeBigger / 2 ) );
    @include box-shadow(
        inset 0 0 1em hsl(0, 0%, 0%)
    );
    display: block;
    height: $circleDiameter - ( $portholeBorder * 2 ) + $portholeBigger;
    left: -$portholeBigger / 2;
    position: absolute;
    width: $circleDiameter - ( $portholeBorder * 2 ) + $portholeBigger;
    z-index: 10;

    @include transition( all 1s );
}

#circles b:hover {
    background: {
        color: hsla(0, 0%, 0%, 0.5);
    }
}

@for $i from 1 through $circles {
    #circles b:nth-of-type( #{$i} ) {
        top: ( $i - 1 ) * ( $circleDiameter + $spaceBetween ) - ( $portholeBigger / 2 );
    }
}
